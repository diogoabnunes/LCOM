#include "mouse.h"

static int hook_id_mouse = 2;
extern uint32_t status;
extern struct packet pp;
extern uint16_t byte_packet[3];

int (mouse_subscribe_int)(uint8_t *bit_no)
{
  *bit_no = hook_id_mouse;

  //checks if the sys call was valid
  if (sys_irqsetpolicy(MOUSE_IRQ, (IRQ_REENABLE | IRQ_EXCLUSIVE), &hook_id_mouse) != OK)
    return 1;

  return 0;
}

int mouse_unsubscribe_int()
{
  if (sys_irqrmpolicy(&hook_id_mouse) != 0)
  {
    printf("Failed to unsubscribe the interrupt of the associated hook.\n");
    return 1;
  }
  return 0;
}

void (mouse_ih)() 
{
  return;
}

void packet_create()
{
  pp.bytes[0] = byte_packet[0];
  pp.bytes[1] = byte_packet[1];
  pp.bytes[2] = byte_packet[2];

  pp.lb = (byte_packet[0] & L_B);
  pp.rb = (byte_packet[0] & R_B) >> 1;
  pp.mb = (byte_packet[0] & M_B) >> 2;

  if((byte_packet[0] & BIT(4)) >> 4 == 0)
  {
    pp.delta_x = (byte_packet[1] & 0x00FF);
  }
  else
  {
    pp.delta_x = (byte_packet[1] | 0xFF00); 
    }
  
  if((byte_packet[0] & BIT(5)) >> 5 == 0)
  {
    pp.delta_y = (byte_packet[2] & 0x00FF);
  }
  else
  {
    pp.delta_y = (byte_packet[2] | 0xFF00); 
    }
  
  pp.x_ov = (byte_packet[0] & X_OVF) >> 6;
  pp.y_ov = (byte_packet[0] & Y_OVF) >> 7;
}
